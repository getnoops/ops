// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package queries

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
	"github.com/google/uuid"
)

// Config includes the requested fields of the GraphQL type Config.
type Config struct {
	Id             uuid.UUID                 `json:"id"`
	Code           string                    `json:"code"`
	Class          ConfigClass               `json:"class"`
	Name           string                    `json:"name"`
	Resources      []ConfigResourcesResource `json:"resources"`
	Version_number string                    `json:"version_number"`
	State          ConfigState               `json:"state"`
	Created_at     time.Time                 `json:"created_at"`
	Updated_at     time.Time                 `json:"updated_at"`
}

// GetId returns Config.Id, and is useful for accessing the field via an interface.
func (v *Config) GetId() uuid.UUID { return v.Id }

// GetCode returns Config.Code, and is useful for accessing the field via an interface.
func (v *Config) GetCode() string { return v.Code }

// GetClass returns Config.Class, and is useful for accessing the field via an interface.
func (v *Config) GetClass() ConfigClass { return v.Class }

// GetName returns Config.Name, and is useful for accessing the field via an interface.
func (v *Config) GetName() string { return v.Name }

// GetResources returns Config.Resources, and is useful for accessing the field via an interface.
func (v *Config) GetResources() []ConfigResourcesResource { return v.Resources }

// GetVersion_number returns Config.Version_number, and is useful for accessing the field via an interface.
func (v *Config) GetVersion_number() string { return v.Version_number }

// GetState returns Config.State, and is useful for accessing the field via an interface.
func (v *Config) GetState() ConfigState { return v.State }

// GetCreated_at returns Config.Created_at, and is useful for accessing the field via an interface.
func (v *Config) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Config.Updated_at, and is useful for accessing the field via an interface.
func (v *Config) GetUpdated_at() time.Time { return v.Updated_at }

type ConfigClass string

const (
	ConfigClassCompute     ConfigClass = "compute"
	ConfigClassStorage     ConfigClass = "storage"
	ConfigClassIntegration ConfigClass = "integration"
)

// ConfigResourcesResource includes the requested fields of the GraphQL type Resource.
type ConfigResourcesResource struct {
	Code         string                 `json:"code"`
	Type         ResourceType           `json:"type"`
	Data         map[string]interface{} `json:"data"`
	References   []string               `json:"references"`
	Allow_access []string               `json:"allow_access"`
}

// GetCode returns ConfigResourcesResource.Code, and is useful for accessing the field via an interface.
func (v *ConfigResourcesResource) GetCode() string { return v.Code }

// GetType returns ConfigResourcesResource.Type, and is useful for accessing the field via an interface.
func (v *ConfigResourcesResource) GetType() ResourceType { return v.Type }

// GetData returns ConfigResourcesResource.Data, and is useful for accessing the field via an interface.
func (v *ConfigResourcesResource) GetData() map[string]interface{} { return v.Data }

// GetReferences returns ConfigResourcesResource.References, and is useful for accessing the field via an interface.
func (v *ConfigResourcesResource) GetReferences() []string { return v.References }

// GetAllow_access returns ConfigResourcesResource.Allow_access, and is useful for accessing the field via an interface.
func (v *ConfigResourcesResource) GetAllow_access() []string { return v.Allow_access }

type ConfigState string

const (
	ConfigStatePending ConfigState = "pending"
	ConfigStateRunning ConfigState = "running"
	ConfigStateFailed  ConfigState = "failed"
	ConfigStateDeleted ConfigState = "deleted"
)

// ConfigWithEnvironments includes the requested fields of the GraphQL type Config.
type ConfigWithEnvironments struct {
	Id             uuid.UUID                                 `json:"id"`
	Code           string                                    `json:"code"`
	Class          ConfigClass                               `json:"class"`
	Name           string                                    `json:"name"`
	Resources      []ConfigWithEnvironmentsResourcesResource `json:"resources"`
	Version_number string                                    `json:"version_number"`
	State          ConfigState                               `json:"state"`
	Created_at     time.Time                                 `json:"created_at"`
	Updated_at     time.Time                                 `json:"updated_at"`
}

// GetId returns ConfigWithEnvironments.Id, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetId() uuid.UUID { return v.Id }

// GetCode returns ConfigWithEnvironments.Code, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetCode() string { return v.Code }

// GetClass returns ConfigWithEnvironments.Class, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetClass() ConfigClass { return v.Class }

// GetName returns ConfigWithEnvironments.Name, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetName() string { return v.Name }

// GetResources returns ConfigWithEnvironments.Resources, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetResources() []ConfigWithEnvironmentsResourcesResource {
	return v.Resources
}

// GetVersion_number returns ConfigWithEnvironments.Version_number, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetVersion_number() string { return v.Version_number }

// GetState returns ConfigWithEnvironments.State, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetState() ConfigState { return v.State }

// GetCreated_at returns ConfigWithEnvironments.Created_at, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns ConfigWithEnvironments.Updated_at, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironments) GetUpdated_at() time.Time { return v.Updated_at }

// ConfigWithEnvironmentsResourcesResource includes the requested fields of the GraphQL type Resource.
type ConfigWithEnvironmentsResourcesResource struct {
	Code         string                 `json:"code"`
	Type         ResourceType           `json:"type"`
	Data         map[string]interface{} `json:"data"`
	References   []string               `json:"references"`
	Allow_access []string               `json:"allow_access"`
}

// GetCode returns ConfigWithEnvironmentsResourcesResource.Code, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironmentsResourcesResource) GetCode() string { return v.Code }

// GetType returns ConfigWithEnvironmentsResourcesResource.Type, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironmentsResourcesResource) GetType() ResourceType { return v.Type }

// GetData returns ConfigWithEnvironmentsResourcesResource.Data, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironmentsResourcesResource) GetData() map[string]interface{} { return v.Data }

// GetReferences returns ConfigWithEnvironmentsResourcesResource.References, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironmentsResourcesResource) GetReferences() []string { return v.References }

// GetAllow_access returns ConfigWithEnvironmentsResourcesResource.Allow_access, and is useful for accessing the field via an interface.
func (v *ConfigWithEnvironmentsResourcesResource) GetAllow_access() []string { return v.Allow_access }

// ConfigWithRevisions includes the requested fields of the GraphQL type Config.
type ConfigWithRevisions struct {
	Id                  uuid.UUID                                                 `json:"id"`
	Code                string                                                    `json:"code"`
	Class               ConfigClass                                               `json:"class"`
	Name                string                                                    `json:"name"`
	Resources           []ConfigWithRevisionsResourcesResource                    `json:"resources"`
	Version_number      string                                                    `json:"version_number"`
	State               ConfigState                                               `json:"state"`
	Revisions           []ConfigWithRevisionsRevisionsConfigRevision              `json:"revisions"`
	ContainerRegistries []ConfigWithRevisionsContainerRegistriesContainerRegistry `json:"containerRegistries"`
	Created_at          time.Time                                                 `json:"created_at"`
	Updated_at          time.Time                                                 `json:"updated_at"`
}

// GetId returns ConfigWithRevisions.Id, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetId() uuid.UUID { return v.Id }

// GetCode returns ConfigWithRevisions.Code, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetCode() string { return v.Code }

// GetClass returns ConfigWithRevisions.Class, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetClass() ConfigClass { return v.Class }

// GetName returns ConfigWithRevisions.Name, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetName() string { return v.Name }

// GetResources returns ConfigWithRevisions.Resources, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetResources() []ConfigWithRevisionsResourcesResource {
	return v.Resources
}

// GetVersion_number returns ConfigWithRevisions.Version_number, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetVersion_number() string { return v.Version_number }

// GetState returns ConfigWithRevisions.State, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetState() ConfigState { return v.State }

// GetRevisions returns ConfigWithRevisions.Revisions, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetRevisions() []ConfigWithRevisionsRevisionsConfigRevision {
	return v.Revisions
}

// GetContainerRegistries returns ConfigWithRevisions.ContainerRegistries, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetContainerRegistries() []ConfigWithRevisionsContainerRegistriesContainerRegistry {
	return v.ContainerRegistries
}

// GetCreated_at returns ConfigWithRevisions.Created_at, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns ConfigWithRevisions.Updated_at, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisions) GetUpdated_at() time.Time { return v.Updated_at }

// ConfigWithRevisionsContainerRegistriesContainerRegistry includes the requested fields of the GraphQL type ContainerRegistry.
type ConfigWithRevisionsContainerRegistriesContainerRegistry struct {
	Id         uuid.UUID  `json:"id"`
	State      StackState `json:"state"`
	Code       string     `json:"code"`
	Created_at time.Time  `json:"created_at"`
	Updated_at time.Time  `json:"updated_at"`
}

// GetId returns ConfigWithRevisionsContainerRegistriesContainerRegistry.Id, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsContainerRegistriesContainerRegistry) GetId() uuid.UUID { return v.Id }

// GetState returns ConfigWithRevisionsContainerRegistriesContainerRegistry.State, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsContainerRegistriesContainerRegistry) GetState() StackState {
	return v.State
}

// GetCode returns ConfigWithRevisionsContainerRegistriesContainerRegistry.Code, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsContainerRegistriesContainerRegistry) GetCode() string { return v.Code }

// GetCreated_at returns ConfigWithRevisionsContainerRegistriesContainerRegistry.Created_at, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsContainerRegistriesContainerRegistry) GetCreated_at() time.Time {
	return v.Created_at
}

// GetUpdated_at returns ConfigWithRevisionsContainerRegistriesContainerRegistry.Updated_at, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsContainerRegistriesContainerRegistry) GetUpdated_at() time.Time {
	return v.Updated_at
}

// ConfigWithRevisionsResourcesResource includes the requested fields of the GraphQL type Resource.
type ConfigWithRevisionsResourcesResource struct {
	Code         string                 `json:"code"`
	Type         ResourceType           `json:"type"`
	Data         map[string]interface{} `json:"data"`
	References   []string               `json:"references"`
	Allow_access []string               `json:"allow_access"`
}

// GetCode returns ConfigWithRevisionsResourcesResource.Code, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsResourcesResource) GetCode() string { return v.Code }

// GetType returns ConfigWithRevisionsResourcesResource.Type, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsResourcesResource) GetType() ResourceType { return v.Type }

// GetData returns ConfigWithRevisionsResourcesResource.Data, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsResourcesResource) GetData() map[string]interface{} { return v.Data }

// GetReferences returns ConfigWithRevisionsResourcesResource.References, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsResourcesResource) GetReferences() []string { return v.References }

// GetAllow_access returns ConfigWithRevisionsResourcesResource.Allow_access, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsResourcesResource) GetAllow_access() []string { return v.Allow_access }

// ConfigWithRevisionsRevisionsConfigRevision includes the requested fields of the GraphQL type ConfigRevision.
type ConfigWithRevisionsRevisionsConfigRevision struct {
	Id             uuid.UUID   `json:"id"`
	Version_number string      `json:"version_number"`
	State          ConfigState `json:"state"`
	Created_at     time.Time   `json:"created_at"`
	Updated_at     time.Time   `json:"updated_at"`
}

// GetId returns ConfigWithRevisionsRevisionsConfigRevision.Id, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsRevisionsConfigRevision) GetId() uuid.UUID { return v.Id }

// GetVersion_number returns ConfigWithRevisionsRevisionsConfigRevision.Version_number, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsRevisionsConfigRevision) GetVersion_number() string {
	return v.Version_number
}

// GetState returns ConfigWithRevisionsRevisionsConfigRevision.State, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsRevisionsConfigRevision) GetState() ConfigState { return v.State }

// GetCreated_at returns ConfigWithRevisionsRevisionsConfigRevision.Created_at, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsRevisionsConfigRevision) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns ConfigWithRevisionsRevisionsConfigRevision.Updated_at, and is useful for accessing the field via an interface.
func (v *ConfigWithRevisionsRevisionsConfigRevision) GetUpdated_at() time.Time { return v.Updated_at }

// CreateContainerRegistryResponse is returned by CreateContainerRegistry on success.
type CreateContainerRegistryResponse struct {
	CreateContainerRegistry uuid.UUID `json:"createContainerRegistry"`
}

// GetCreateContainerRegistry returns CreateContainerRegistryResponse.CreateContainerRegistry, and is useful for accessing the field via an interface.
func (v *CreateContainerRegistryResponse) GetCreateContainerRegistry() uuid.UUID {
	return v.CreateContainerRegistry
}

// DeleteContainerRegistryResponse is returned by DeleteContainerRegistry on success.
type DeleteContainerRegistryResponse struct {
	DeleteContainerRegistry uuid.UUID `json:"deleteContainerRegistry"`
}

// GetDeleteContainerRegistry returns DeleteContainerRegistryResponse.DeleteContainerRegistry, and is useful for accessing the field via an interface.
func (v *DeleteContainerRegistryResponse) GetDeleteContainerRegistry() uuid.UUID {
	return v.DeleteContainerRegistry
}

// Environment includes the requested fields of the GraphQL type Environment.
type Environment struct {
	Id         uuid.UUID       `json:"id"`
	Type       EnvironmentType `json:"type"`
	State      StackState      `json:"state"`
	Code       string          `json:"code"`
	Name       string          `json:"name"`
	Created_at time.Time       `json:"created_at"`
	Updated_at time.Time       `json:"updated_at"`
}

// GetId returns Environment.Id, and is useful for accessing the field via an interface.
func (v *Environment) GetId() uuid.UUID { return v.Id }

// GetType returns Environment.Type, and is useful for accessing the field via an interface.
func (v *Environment) GetType() EnvironmentType { return v.Type }

// GetState returns Environment.State, and is useful for accessing the field via an interface.
func (v *Environment) GetState() StackState { return v.State }

// GetCode returns Environment.Code, and is useful for accessing the field via an interface.
func (v *Environment) GetCode() string { return v.Code }

// GetName returns Environment.Name, and is useful for accessing the field via an interface.
func (v *Environment) GetName() string { return v.Name }

// GetCreated_at returns Environment.Created_at, and is useful for accessing the field via an interface.
func (v *Environment) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Environment.Updated_at, and is useful for accessing the field via an interface.
func (v *Environment) GetUpdated_at() time.Time { return v.Updated_at }

type EnvironmentType string

const (
	EnvironmentTypePersonal   EnvironmentType = "personal"
	EnvironmentTypeEmphemeral EnvironmentType = "emphemeral"
	EnvironmentTypeStatic     EnvironmentType = "static"
)

// GetConfigResponse is returned by GetConfig on success.
type GetConfigResponse struct {
	Config ConfigWithRevisions `json:"config"`
}

// GetConfig returns GetConfigResponse.Config, and is useful for accessing the field via an interface.
func (v *GetConfigResponse) GetConfig() ConfigWithRevisions { return v.Config }

// GetConfigRevisionResponse is returned by GetConfigRevision on success.
type GetConfigRevisionResponse struct {
	Config ConfigWithEnvironments `json:"config"`
}

// GetConfig returns GetConfigRevisionResponse.Config, and is useful for accessing the field via an interface.
func (v *GetConfigRevisionResponse) GetConfig() ConfigWithEnvironments { return v.Config }

// GetConfigsConfigsPagedConfigsOutput includes the requested fields of the GraphQL type PagedConfigsOutput.
type GetConfigsConfigsPagedConfigsOutput struct {
	Items       []Config `json:"items"`
	Page_size   int      `json:"page_size"`
	Page        int      `json:"page"`
	Total_items int      `json:"total_items"`
	Total_pages int      `json:"total_pages"`
}

// GetItems returns GetConfigsConfigsPagedConfigsOutput.Items, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetItems() []Config { return v.Items }

// GetPage_size returns GetConfigsConfigsPagedConfigsOutput.Page_size, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetPage_size() int { return v.Page_size }

// GetPage returns GetConfigsConfigsPagedConfigsOutput.Page, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetPage() int { return v.Page }

// GetTotal_items returns GetConfigsConfigsPagedConfigsOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetTotal_items() int { return v.Total_items }

// GetTotal_pages returns GetConfigsConfigsPagedConfigsOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetTotal_pages() int { return v.Total_pages }

// GetConfigsResponse is returned by GetConfigs on success.
type GetConfigsResponse struct {
	Configs GetConfigsConfigsPagedConfigsOutput `json:"configs"`
}

// GetConfigs returns GetConfigsResponse.Configs, and is useful for accessing the field via an interface.
func (v *GetConfigsResponse) GetConfigs() GetConfigsConfigsPagedConfigsOutput { return v.Configs }

// GetEnvironmentsEnvironmentsPagedEnvironmentsOutput includes the requested fields of the GraphQL type PagedEnvironmentsOutput.
type GetEnvironmentsEnvironmentsPagedEnvironmentsOutput struct {
	Items       []Environment `json:"items"`
	Page_size   int           `json:"page_size"`
	Page        int           `json:"page"`
	Total_items int           `json:"total_items"`
	Total_pages int           `json:"total_pages"`
}

// GetItems returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Items, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetItems() []Environment { return v.Items }

// GetPage_size returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Page_size, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetPage_size() int { return v.Page_size }

// GetPage returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Page, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetPage() int { return v.Page }

// GetTotal_items returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetTotal_items() int {
	return v.Total_items
}

// GetTotal_pages returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetTotal_pages() int {
	return v.Total_pages
}

// GetEnvironmentsResponse is returned by GetEnvironments on success.
type GetEnvironmentsResponse struct {
	Environments GetEnvironmentsEnvironmentsPagedEnvironmentsOutput `json:"environments"`
}

// GetEnvironments returns GetEnvironmentsResponse.Environments, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsResponse) GetEnvironments() GetEnvironmentsEnvironmentsPagedEnvironmentsOutput {
	return v.Environments
}

// GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput includes the requested fields of the GraphQL type PagedOrganisationsOutput.
type GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput struct {
	Items       []Organisation `json:"items"`
	Limit       int            `json:"limit"`
	Page        int            `json:"page"`
	Total_items int            `json:"total_items"`
	Total_pages int            `json:"total_pages"`
}

// GetItems returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Items, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetItems() []Organisation {
	return v.Items
}

// GetLimit returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Limit, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetLimit() int {
	return v.Limit
}

// GetPage returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Page, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetPage() int {
	return v.Page
}

// GetTotal_items returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetTotal_items() int {
	return v.Total_items
}

// GetTotal_pages returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetTotal_pages() int {
	return v.Total_pages
}

// GetMemberOrganisationsResponse is returned by GetMemberOrganisations on success.
type GetMemberOrganisationsResponse struct {
	MemberOrganisations GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput `json:"memberOrganisations"`
}

// GetMemberOrganisations returns GetMemberOrganisationsResponse.MemberOrganisations, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsResponse) GetMemberOrganisations() GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput {
	return v.MemberOrganisations
}

// NewDeploymentResponse is returned by NewDeployment on success.
type NewDeploymentResponse struct {
	NewDeployment uuid.UUID `json:"newDeployment"`
}

// GetNewDeployment returns NewDeploymentResponse.NewDeployment, and is useful for accessing the field via an interface.
func (v *NewDeploymentResponse) GetNewDeployment() uuid.UUID { return v.NewDeployment }

// Organisation includes the requested fields of the GraphQL type Organisation.
type Organisation struct {
	Id         uuid.UUID         `json:"id"`
	Code       string            `json:"code"`
	Name       string            `json:"name"`
	State      OrganisationState `json:"state"`
	Created_at time.Time         `json:"created_at"`
	Updated_at time.Time         `json:"updated_at"`
	Deleted_at time.Time         `json:"deleted_at"`
}

// GetId returns Organisation.Id, and is useful for accessing the field via an interface.
func (v *Organisation) GetId() uuid.UUID { return v.Id }

// GetCode returns Organisation.Code, and is useful for accessing the field via an interface.
func (v *Organisation) GetCode() string { return v.Code }

// GetName returns Organisation.Name, and is useful for accessing the field via an interface.
func (v *Organisation) GetName() string { return v.Name }

// GetState returns Organisation.State, and is useful for accessing the field via an interface.
func (v *Organisation) GetState() OrganisationState { return v.State }

// GetCreated_at returns Organisation.Created_at, and is useful for accessing the field via an interface.
func (v *Organisation) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Organisation.Updated_at, and is useful for accessing the field via an interface.
func (v *Organisation) GetUpdated_at() time.Time { return v.Updated_at }

// GetDeleted_at returns Organisation.Deleted_at, and is useful for accessing the field via an interface.
func (v *Organisation) GetDeleted_at() time.Time { return v.Deleted_at }

type OrganisationState string

const (
	OrganisationStateNew     OrganisationState = "new"
	OrganisationStateCreated OrganisationState = "created"
	OrganisationStateDeleted OrganisationState = "deleted"
)

type ResourceType string

const (
	ResourceTypeContainer ResourceType = "container"
	ResourceTypeDatabase  ResourceType = "database"
	ResourceTypeBucket    ResourceType = "bucket"
	ResourceTypeQueue     ResourceType = "queue"
)

type StackState string

const (
	StackStateNew      StackState = "new"
	StackStateCreating StackState = "creating"
	StackStateCreated  StackState = "created"
	StackStateUpdating StackState = "updating"
	StackStateUpdated  StackState = "updated"
	StackStateFailed   StackState = "failed"
	StackStateDeleting StackState = "deleting"
	StackStateDeleted  StackState = "deleted"
)

// __CreateContainerRegistryInput is used internally by genqlient
type __CreateContainerRegistryInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	AggregateId    uuid.UUID `json:"aggregateId"`
	ConfigId       uuid.UUID `json:"configId"`
	Code           string    `json:"code"`
}

// GetOrganisationId returns __CreateContainerRegistryInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateContainerRegistryInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __CreateContainerRegistryInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__CreateContainerRegistryInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetConfigId returns __CreateContainerRegistryInput.ConfigId, and is useful for accessing the field via an interface.
func (v *__CreateContainerRegistryInput) GetConfigId() uuid.UUID { return v.ConfigId }

// GetCode returns __CreateContainerRegistryInput.Code, and is useful for accessing the field via an interface.
func (v *__CreateContainerRegistryInput) GetCode() string { return v.Code }

// __DeleteContainerRegistryInput is used internally by genqlient
type __DeleteContainerRegistryInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Id             uuid.UUID `json:"id"`
}

// GetOrganisationId returns __DeleteContainerRegistryInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__DeleteContainerRegistryInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetId returns __DeleteContainerRegistryInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteContainerRegistryInput) GetId() uuid.UUID { return v.Id }

// __GetConfigInput is used internally by genqlient
type __GetConfigInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Code           string    `json:"code"`
}

// GetOrganisationId returns __GetConfigInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetConfigInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetCode returns __GetConfigInput.Code, and is useful for accessing the field via an interface.
func (v *__GetConfigInput) GetCode() string { return v.Code }

// __GetConfigRevisionInput is used internally by genqlient
type __GetConfigRevisionInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Code           string    `json:"code"`
}

// GetOrganisationId returns __GetConfigRevisionInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetConfigRevisionInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetCode returns __GetConfigRevisionInput.Code, and is useful for accessing the field via an interface.
func (v *__GetConfigRevisionInput) GetCode() string { return v.Code }

// __GetConfigsInput is used internally by genqlient
type __GetConfigsInput struct {
	OrganisationId uuid.UUID   `json:"organisationId"`
	Class          ConfigClass `json:"class"`
	Page           int         `json:"page"`
	PageSize       int         `json:"pageSize"`
}

// GetOrganisationId returns __GetConfigsInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetClass returns __GetConfigsInput.Class, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetClass() ConfigClass { return v.Class }

// GetPage returns __GetConfigsInput.Page, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetPage() int { return v.Page }

// GetPageSize returns __GetConfigsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetPageSize() int { return v.PageSize }

// __GetEnvironmentsInput is used internally by genqlient
type __GetEnvironmentsInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Codes          []string  `json:"codes"`
	Page           int       `json:"page"`
	PageSize       int       `json:"pageSize"`
}

// GetOrganisationId returns __GetEnvironmentsInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetCodes returns __GetEnvironmentsInput.Codes, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetCodes() []string { return v.Codes }

// GetPage returns __GetEnvironmentsInput.Page, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetPage() int { return v.Page }

// GetPageSize returns __GetEnvironmentsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetPageSize() int { return v.PageSize }

// __GetMemberOrganisationsInput is used internally by genqlient
type __GetMemberOrganisationsInput struct {
	UserId   uuid.UUID `json:"userId"`
	Page     int       `json:"page"`
	PageSize int       `json:"pageSize"`
}

// GetUserId returns __GetMemberOrganisationsInput.UserId, and is useful for accessing the field via an interface.
func (v *__GetMemberOrganisationsInput) GetUserId() uuid.UUID { return v.UserId }

// GetPage returns __GetMemberOrganisationsInput.Page, and is useful for accessing the field via an interface.
func (v *__GetMemberOrganisationsInput) GetPage() int { return v.Page }

// GetPageSize returns __GetMemberOrganisationsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetMemberOrganisationsInput) GetPageSize() int { return v.PageSize }

// __NewDeploymentInput is used internally by genqlient
type __NewDeploymentInput struct {
	OrganisationId   uuid.UUID `json:"organisationId"`
	AggregateId      uuid.UUID `json:"aggregateId"`
	EnvironmentId    uuid.UUID `json:"environmentId"`
	ConfigId         uuid.UUID `json:"configId"`
	ConfigRevisionId uuid.UUID `json:"configRevisionId"`
	RevisionId       uuid.UUID `json:"revisionId"`
}

// GetOrganisationId returns __NewDeploymentInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __NewDeploymentInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetEnvironmentId returns __NewDeploymentInput.EnvironmentId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetEnvironmentId() uuid.UUID { return v.EnvironmentId }

// GetConfigId returns __NewDeploymentInput.ConfigId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetConfigId() uuid.UUID { return v.ConfigId }

// GetConfigRevisionId returns __NewDeploymentInput.ConfigRevisionId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetConfigRevisionId() uuid.UUID { return v.ConfigRevisionId }

// GetRevisionId returns __NewDeploymentInput.RevisionId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetRevisionId() uuid.UUID { return v.RevisionId }

// The query or mutation executed by CreateContainerRegistry.
const CreateContainerRegistry_Operation = `
mutation CreateContainerRegistry ($organisationId: UUID!, $aggregateId: UUID!, $configId: UUID!, $code: String!) {
	createContainerRegistry(input: {organisation_id:$organisationId,aggregate_id:$aggregateId,config_id:$configId,code:$code})
}
`

func CreateContainerRegistry(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
	configId uuid.UUID,
	code string,
) (*CreateContainerRegistryResponse, error) {
	req := &graphql.Request{
		OpName: "CreateContainerRegistry",
		Query:  CreateContainerRegistry_Operation,
		Variables: &__CreateContainerRegistryInput{
			OrganisationId: organisationId,
			AggregateId:    aggregateId,
			ConfigId:       configId,
			Code:           code,
		},
	}
	var err error

	var data CreateContainerRegistryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteContainerRegistry.
const DeleteContainerRegistry_Operation = `
mutation DeleteContainerRegistry ($organisationId: UUID!, $id: UUID!) {
	deleteContainerRegistry(input: {organisation_id:$organisationId,id:$id})
}
`

func DeleteContainerRegistry(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	id uuid.UUID,
) (*DeleteContainerRegistryResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteContainerRegistry",
		Query:  DeleteContainerRegistry_Operation,
		Variables: &__DeleteContainerRegistryInput{
			OrganisationId: organisationId,
			Id:             id,
		},
	}
	var err error

	var data DeleteContainerRegistryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetConfig.
const GetConfig_Operation = `
query GetConfig ($organisationId: UUID!, $code: String!) {
	config(input: {organisation_id:$organisationId,code:$code}) {
		id
		code
		class
		name
		resources {
			code
			type
			data
			references
			allow_access
		}
		version_number
		state
		revisions {
			id
			version_number
			state
			created_at
			updated_at
		}
		containerRegistries {
			id
			state
			code
			created_at
			updated_at
		}
		created_at
		updated_at
	}
}
`

func GetConfig(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	code string,
) (*GetConfigResponse, error) {
	req := &graphql.Request{
		OpName: "GetConfig",
		Query:  GetConfig_Operation,
		Variables: &__GetConfigInput{
			OrganisationId: organisationId,
			Code:           code,
		},
	}
	var err error

	var data GetConfigResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetConfigRevision.
const GetConfigRevision_Operation = `
query GetConfigRevision ($organisationId: UUID!, $code: String!) {
	config(input: {organisation_id:$organisationId,code:$code}) {
		id
		code
		class
		name
		resources {
			code
			type
			data
			references
			allow_access
		}
		version_number
		state
		created_at
		updated_at
	}
}
`

func GetConfigRevision(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	code string,
) (*GetConfigRevisionResponse, error) {
	req := &graphql.Request{
		OpName: "GetConfigRevision",
		Query:  GetConfigRevision_Operation,
		Variables: &__GetConfigRevisionInput{
			OrganisationId: organisationId,
			Code:           code,
		},
	}
	var err error

	var data GetConfigRevisionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetConfigs.
const GetConfigs_Operation = `
query GetConfigs ($organisationId: UUID!, $class: ConfigClass!, $page: Int, $pageSize: Int) {
	configs(input: {organisation_id:$organisationId,class:$class,page:$page,page_size:$pageSize}) {
		items {
			id
			code
			class
			name
			resources {
				code
				type
				data
				references
				allow_access
			}
			version_number
			state
			created_at
			updated_at
		}
		page_size
		page
		total_items
		total_pages
	}
}
`

func GetConfigs(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	class ConfigClass,
	page int,
	pageSize int,
) (*GetConfigsResponse, error) {
	req := &graphql.Request{
		OpName: "GetConfigs",
		Query:  GetConfigs_Operation,
		Variables: &__GetConfigsInput{
			OrganisationId: organisationId,
			Class:          class,
			Page:           page,
			PageSize:       pageSize,
		},
	}
	var err error

	var data GetConfigsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetEnvironments.
const GetEnvironments_Operation = `
query GetEnvironments ($organisationId: UUID!, $codes: [String!], $page: Int, $pageSize: Int) {
	environments(input: {organisation_id:$organisationId,codes:$codes,page:$page,page_size:$pageSize}) {
		items {
			id
			type
			state
			code
			name
			created_at
			updated_at
		}
		page_size
		page
		total_items
		total_pages
	}
}
`

func GetEnvironments(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	codes []string,
	page int,
	pageSize int,
) (*GetEnvironmentsResponse, error) {
	req := &graphql.Request{
		OpName: "GetEnvironments",
		Query:  GetEnvironments_Operation,
		Variables: &__GetEnvironmentsInput{
			OrganisationId: organisationId,
			Codes:          codes,
			Page:           page,
			PageSize:       pageSize,
		},
	}
	var err error

	var data GetEnvironmentsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetMemberOrganisations.
const GetMemberOrganisations_Operation = `
query GetMemberOrganisations ($userId: UUID!, $page: Int, $pageSize: Int) {
	memberOrganisations(input: {user_id:$userId,page:$page,page_size:$pageSize}) {
		items {
			id
			code
			name
			state
			created_at
			updated_at
			deleted_at
		}
		limit
		page
		total_items
		total_pages
	}
}
`

func GetMemberOrganisations(
	ctx context.Context,
	client graphql.Client,
	userId uuid.UUID,
	page int,
	pageSize int,
) (*GetMemberOrganisationsResponse, error) {
	req := &graphql.Request{
		OpName: "GetMemberOrganisations",
		Query:  GetMemberOrganisations_Operation,
		Variables: &__GetMemberOrganisationsInput{
			UserId:   userId,
			Page:     page,
			PageSize: pageSize,
		},
	}
	var err error

	var data GetMemberOrganisationsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by NewDeployment.
const NewDeployment_Operation = `
mutation NewDeployment ($organisationId: UUID!, $aggregateId: UUID!, $environmentId: UUID!, $configId: UUID!, $configRevisionId: UUID!, $revisionId: UUID!) {
	newDeployment(input: {organisation_id:$organisationId,aggregate_id:$aggregateId,environment_id:$environmentId,config_id:$configId,config_revision_id:$configRevisionId,revision_id:$revisionId})
}
`

func NewDeployment(
	ctx context.Context,
	client graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
	environmentId uuid.UUID,
	configId uuid.UUID,
	configRevisionId uuid.UUID,
	revisionId uuid.UUID,
) (*NewDeploymentResponse, error) {
	req := &graphql.Request{
		OpName: "NewDeployment",
		Query:  NewDeployment_Operation,
		Variables: &__NewDeploymentInput{
			OrganisationId:   organisationId,
			AggregateId:      aggregateId,
			EnvironmentId:    environmentId,
			ConfigId:         configId,
			ConfigRevisionId: configRevisionId,
			RevisionId:       revisionId,
		},
	}
	var err error

	var data NewDeploymentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
