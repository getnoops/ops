// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package queries

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
	"github.com/google/uuid"
)

// Access includes the requested fields of the GraphQL type ConfigAccess.
type Access struct {
	Inbound  []string `json:"inbound"`
	Outbound []string `json:"outbound"`
}

// GetInbound returns Access.Inbound, and is useful for accessing the field via an interface.
func (v *Access) GetInbound() []string { return v.Inbound }

// GetOutbound returns Access.Outbound, and is useful for accessing the field via an interface.
func (v *Access) GetOutbound() []string { return v.Outbound }

// ApiKey includes the requested fields of the GraphQL type ApiKey.
type ApiKey struct {
	Id              uuid.UUID   `json:"id"`
	State           ApiKeyState `json:"state"`
	Organisation_id uuid.UUID   `json:"organisation_id"`
	Created_at      time.Time   `json:"created_at"`
	Updated_at      time.Time   `json:"updated_at"`
	Deleted_at      time.Time   `json:"deleted_at"`
	Authed_at       time.Time   `json:"authed_at"`
}

// GetId returns ApiKey.Id, and is useful for accessing the field via an interface.
func (v *ApiKey) GetId() uuid.UUID { return v.Id }

// GetState returns ApiKey.State, and is useful for accessing the field via an interface.
func (v *ApiKey) GetState() ApiKeyState { return v.State }

// GetOrganisation_id returns ApiKey.Organisation_id, and is useful for accessing the field via an interface.
func (v *ApiKey) GetOrganisation_id() uuid.UUID { return v.Organisation_id }

// GetCreated_at returns ApiKey.Created_at, and is useful for accessing the field via an interface.
func (v *ApiKey) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns ApiKey.Updated_at, and is useful for accessing the field via an interface.
func (v *ApiKey) GetUpdated_at() time.Time { return v.Updated_at }

// GetDeleted_at returns ApiKey.Deleted_at, and is useful for accessing the field via an interface.
func (v *ApiKey) GetDeleted_at() time.Time { return v.Deleted_at }

// GetAuthed_at returns ApiKey.Authed_at, and is useful for accessing the field via an interface.
func (v *ApiKey) GetAuthed_at() time.Time { return v.Authed_at }

type ApiKeyState string

const (
	ApiKeyStateNew     ApiKeyState = "new"
	ApiKeyStateCreated ApiKeyState = "created"
	ApiKeyStateDeleted ApiKeyState = "deleted"
)

// AuthContainerRepository includes the requested fields of the GraphQL type AuthContainerRepository.
type AuthContainerRepository struct {
	Username     string `json:"username"`
	Password     string `json:"password"`
	Registry_url string `json:"registry_url"`
}

// GetUsername returns AuthContainerRepository.Username, and is useful for accessing the field via an interface.
func (v *AuthContainerRepository) GetUsername() string { return v.Username }

// GetPassword returns AuthContainerRepository.Password, and is useful for accessing the field via an interface.
func (v *AuthContainerRepository) GetPassword() string { return v.Password }

// GetRegistry_url returns AuthContainerRepository.Registry_url, and is useful for accessing the field via an interface.
func (v *AuthContainerRepository) GetRegistry_url() string { return v.Registry_url }

// Config includes the requested fields of the GraphQL type Config.
type Config struct {
	Id                    uuid.UUID                  `json:"id"`
	Code                  string                     `json:"code"`
	Class                 ConfigClass                `json:"class"`
	Name                  string                     `json:"name"`
	Resources             []*Resources               `json:"resources"`
	Access                *Access                    `json:"access"`
	Version_number        string                     `json:"version_number"`
	State                 ConfigState                `json:"state"`
	Revisions             []*RevisionItem            `json:"revisions"`
	ContainerRepositories []*ContainerRepositoryItem `json:"containerRepositories"`
	Secrets               []*SecretItem              `json:"secrets"`
	Deployments           []*Deployment              `json:"deployments"`
	Registry              *Registry                  `json:"registry"`
	Created_at            time.Time                  `json:"created_at"`
	Updated_at            time.Time                  `json:"updated_at"`
}

// GetId returns Config.Id, and is useful for accessing the field via an interface.
func (v *Config) GetId() uuid.UUID { return v.Id }

// GetCode returns Config.Code, and is useful for accessing the field via an interface.
func (v *Config) GetCode() string { return v.Code }

// GetClass returns Config.Class, and is useful for accessing the field via an interface.
func (v *Config) GetClass() ConfigClass { return v.Class }

// GetName returns Config.Name, and is useful for accessing the field via an interface.
func (v *Config) GetName() string { return v.Name }

// GetResources returns Config.Resources, and is useful for accessing the field via an interface.
func (v *Config) GetResources() []*Resources { return v.Resources }

// GetAccess returns Config.Access, and is useful for accessing the field via an interface.
func (v *Config) GetAccess() *Access { return v.Access }

// GetVersion_number returns Config.Version_number, and is useful for accessing the field via an interface.
func (v *Config) GetVersion_number() string { return v.Version_number }

// GetState returns Config.State, and is useful for accessing the field via an interface.
func (v *Config) GetState() ConfigState { return v.State }

// GetRevisions returns Config.Revisions, and is useful for accessing the field via an interface.
func (v *Config) GetRevisions() []*RevisionItem { return v.Revisions }

// GetContainerRepositories returns Config.ContainerRepositories, and is useful for accessing the field via an interface.
func (v *Config) GetContainerRepositories() []*ContainerRepositoryItem {
	return v.ContainerRepositories
}

// GetSecrets returns Config.Secrets, and is useful for accessing the field via an interface.
func (v *Config) GetSecrets() []*SecretItem { return v.Secrets }

// GetDeployments returns Config.Deployments, and is useful for accessing the field via an interface.
func (v *Config) GetDeployments() []*Deployment { return v.Deployments }

// GetRegistry returns Config.Registry, and is useful for accessing the field via an interface.
func (v *Config) GetRegistry() *Registry { return v.Registry }

// GetCreated_at returns Config.Created_at, and is useful for accessing the field via an interface.
func (v *Config) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Config.Updated_at, and is useful for accessing the field via an interface.
func (v *Config) GetUpdated_at() time.Time { return v.Updated_at }

type ConfigAccessInput struct {
	Inbound  []string `json:"inbound"`
	Outbound []string `json:"outbound"`
}

// GetInbound returns ConfigAccessInput.Inbound, and is useful for accessing the field via an interface.
func (v *ConfigAccessInput) GetInbound() []string { return v.Inbound }

// GetOutbound returns ConfigAccessInput.Outbound, and is useful for accessing the field via an interface.
func (v *ConfigAccessInput) GetOutbound() []string { return v.Outbound }

type ConfigClass string

const (
	ConfigClassCompute      ConfigClass = "compute"
	ConfigClassStorage      ConfigClass = "storage"
	ConfigClassQueue        ConfigClass = "queue"
	ConfigClassNotification ConfigClass = "notification"
)

// ConfigItem includes the requested fields of the GraphQL type Config.
type ConfigItem struct {
	Id         uuid.UUID   `json:"id"`
	Code       string      `json:"code"`
	Class      ConfigClass `json:"class"`
	Name       string      `json:"name"`
	State      ConfigState `json:"state"`
	Created_at time.Time   `json:"created_at"`
	Updated_at time.Time   `json:"updated_at"`
}

// GetId returns ConfigItem.Id, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetId() uuid.UUID { return v.Id }

// GetCode returns ConfigItem.Code, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetCode() string { return v.Code }

// GetClass returns ConfigItem.Class, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetClass() ConfigClass { return v.Class }

// GetName returns ConfigItem.Name, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetName() string { return v.Name }

// GetState returns ConfigItem.State, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetState() ConfigState { return v.State }

// GetCreated_at returns ConfigItem.Created_at, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns ConfigItem.Updated_at, and is useful for accessing the field via an interface.
func (v *ConfigItem) GetUpdated_at() time.Time { return v.Updated_at }

type ConfigState string

const (
	ConfigStatePending ConfigState = "pending"
	ConfigStateRunning ConfigState = "running"
	ConfigStateFailed  ConfigState = "failed"
	ConfigStateDeleted ConfigState = "deleted"
)

// ContainerRepositoryItem includes the requested fields of the GraphQL type ContainerRepository.
type ContainerRepositoryItem struct {
	Id         uuid.UUID                     `json:"id"`
	Code       string                        `json:"code"`
	Stack      *ContainerRepositoryItemStack `json:"stack"`
	State      StackState                    `json:"state"`
	Created_at time.Time                     `json:"created_at"`
	Updated_at time.Time                     `json:"updated_at"`
}

// GetId returns ContainerRepositoryItem.Id, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItem) GetId() uuid.UUID { return v.Id }

// GetCode returns ContainerRepositoryItem.Code, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItem) GetCode() string { return v.Code }

// GetStack returns ContainerRepositoryItem.Stack, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItem) GetStack() *ContainerRepositoryItemStack { return v.Stack }

// GetState returns ContainerRepositoryItem.State, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItem) GetState() StackState { return v.State }

// GetCreated_at returns ContainerRepositoryItem.Created_at, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItem) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns ContainerRepositoryItem.Updated_at, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItem) GetUpdated_at() time.Time { return v.Updated_at }

// ContainerRepositoryItemStack includes the requested fields of the GraphQL type Stack.
type ContainerRepositoryItemStack struct {
	Outputs []*ContainerRepositoryItemStackOutputsStackOutput `json:"outputs"`
}

// GetOutputs returns ContainerRepositoryItemStack.Outputs, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItemStack) GetOutputs() []*ContainerRepositoryItemStackOutputsStackOutput {
	return v.Outputs
}

// ContainerRepositoryItemStackOutputsStackOutput includes the requested fields of the GraphQL type StackOutput.
type ContainerRepositoryItemStackOutputsStackOutput struct {
	Output_key   string `json:"output_key"`
	Output_value string `json:"output_value"`
}

// GetOutput_key returns ContainerRepositoryItemStackOutputsStackOutput.Output_key, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItemStackOutputsStackOutput) GetOutput_key() string { return v.Output_key }

// GetOutput_value returns ContainerRepositoryItemStackOutputsStackOutput.Output_value, and is useful for accessing the field via an interface.
func (v *ContainerRepositoryItemStackOutputsStackOutput) GetOutput_value() string {
	return v.Output_value
}

// CreateApiKeyResponse is returned by CreateApiKey on success.
type CreateApiKeyResponse struct {
	CreateApiKey *IdWithToken `json:"createApiKey"`
}

// GetCreateApiKey returns CreateApiKeyResponse.CreateApiKey, and is useful for accessing the field via an interface.
func (v *CreateApiKeyResponse) GetCreateApiKey() *IdWithToken { return v.CreateApiKey }

// CreateConfigResponse is returned by CreateConfig on success.
type CreateConfigResponse struct {
	CreateConfig uuid.UUID `json:"createConfig"`
}

// GetCreateConfig returns CreateConfigResponse.CreateConfig, and is useful for accessing the field via an interface.
func (v *CreateConfigResponse) GetCreateConfig() uuid.UUID { return v.CreateConfig }

// CreateContainerRepositoryResponse is returned by CreateContainerRepository on success.
type CreateContainerRepositoryResponse struct {
	CreateContainerRepository uuid.UUID `json:"createContainerRepository"`
}

// GetCreateContainerRepository returns CreateContainerRepositoryResponse.CreateContainerRepository, and is useful for accessing the field via an interface.
func (v *CreateContainerRepositoryResponse) GetCreateContainerRepository() uuid.UUID {
	return v.CreateContainerRepository
}

// CreateSecretResponse is returned by CreateSecret on success.
type CreateSecretResponse struct {
	CreateSecret uuid.UUID `json:"createSecret"`
}

// GetCreateSecret returns CreateSecretResponse.CreateSecret, and is useful for accessing the field via an interface.
func (v *CreateSecretResponse) GetCreateSecret() uuid.UUID { return v.CreateSecret }

// DeleteApiKeyResponse is returned by DeleteApiKey on success.
type DeleteApiKeyResponse struct {
	DeleteApiKey uuid.UUID `json:"deleteApiKey"`
}

// GetDeleteApiKey returns DeleteApiKeyResponse.DeleteApiKey, and is useful for accessing the field via an interface.
func (v *DeleteApiKeyResponse) GetDeleteApiKey() uuid.UUID { return v.DeleteApiKey }

// DeleteContainerRepositoryResponse is returned by DeleteContainerRepository on success.
type DeleteContainerRepositoryResponse struct {
	DeleteContainerRepository uuid.UUID `json:"deleteContainerRepository"`
}

// GetDeleteContainerRepository returns DeleteContainerRepositoryResponse.DeleteContainerRepository, and is useful for accessing the field via an interface.
func (v *DeleteContainerRepositoryResponse) GetDeleteContainerRepository() uuid.UUID {
	return v.DeleteContainerRepository
}

// DeleteDeploymentResponse is returned by DeleteDeployment on success.
type DeleteDeploymentResponse struct {
	DeleteDeployment uuid.UUID `json:"deleteDeployment"`
}

// GetDeleteDeployment returns DeleteDeploymentResponse.DeleteDeployment, and is useful for accessing the field via an interface.
func (v *DeleteDeploymentResponse) GetDeleteDeployment() uuid.UUID { return v.DeleteDeployment }

// DeleteSecretResponse is returned by DeleteSecret on success.
type DeleteSecretResponse struct {
	DeleteSecret uuid.UUID `json:"deleteSecret"`
}

// GetDeleteSecret returns DeleteSecretResponse.DeleteSecret, and is useful for accessing the field via an interface.
func (v *DeleteSecretResponse) GetDeleteSecret() uuid.UUID { return v.DeleteSecret }

// Deployment includes the requested fields of the GraphQL type Deployment.
type Deployment struct {
	Id          uuid.UUID    `json:"id"`
	State       StackState   `json:"state"`
	Environment *Environment `json:"environment"`
	Created_at  time.Time    `json:"created_at"`
	Updated_at  time.Time    `json:"updated_at"`
}

// GetId returns Deployment.Id, and is useful for accessing the field via an interface.
func (v *Deployment) GetId() uuid.UUID { return v.Id }

// GetState returns Deployment.State, and is useful for accessing the field via an interface.
func (v *Deployment) GetState() StackState { return v.State }

// GetEnvironment returns Deployment.Environment, and is useful for accessing the field via an interface.
func (v *Deployment) GetEnvironment() *Environment { return v.Environment }

// GetCreated_at returns Deployment.Created_at, and is useful for accessing the field via an interface.
func (v *Deployment) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Deployment.Updated_at, and is useful for accessing the field via an interface.
func (v *Deployment) GetUpdated_at() time.Time { return v.Updated_at }

// DeploymentRevision includes the requested fields of the GraphQL type DeploymentRevision.
type DeploymentRevision struct {
	Id          uuid.UUID    `json:"id"`
	State       StackState   `json:"state"`
	Deployment  *Deployment  `json:"deployment"`
	Environment *Environment `json:"environment"`
	Config      *ConfigItem  `json:"config"`
	Created_at  time.Time    `json:"created_at"`
	Updated_at  time.Time    `json:"updated_at"`
}

// GetId returns DeploymentRevision.Id, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetId() uuid.UUID { return v.Id }

// GetState returns DeploymentRevision.State, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetState() StackState { return v.State }

// GetDeployment returns DeploymentRevision.Deployment, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetDeployment() *Deployment { return v.Deployment }

// GetEnvironment returns DeploymentRevision.Environment, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetEnvironment() *Environment { return v.Environment }

// GetConfig returns DeploymentRevision.Config, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetConfig() *ConfigItem { return v.Config }

// GetCreated_at returns DeploymentRevision.Created_at, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns DeploymentRevision.Updated_at, and is useful for accessing the field via an interface.
func (v *DeploymentRevision) GetUpdated_at() time.Time { return v.Updated_at }

// Environment includes the requested fields of the GraphQL type Environment.
type Environment struct {
	Id         uuid.UUID       `json:"id"`
	Type       EnvironmentType `json:"type"`
	State      StackState      `json:"state"`
	Code       string          `json:"code"`
	Name       string          `json:"name"`
	Created_at time.Time       `json:"created_at"`
	Updated_at time.Time       `json:"updated_at"`
}

// GetId returns Environment.Id, and is useful for accessing the field via an interface.
func (v *Environment) GetId() uuid.UUID { return v.Id }

// GetType returns Environment.Type, and is useful for accessing the field via an interface.
func (v *Environment) GetType() EnvironmentType { return v.Type }

// GetState returns Environment.State, and is useful for accessing the field via an interface.
func (v *Environment) GetState() StackState { return v.State }

// GetCode returns Environment.Code, and is useful for accessing the field via an interface.
func (v *Environment) GetCode() string { return v.Code }

// GetName returns Environment.Name, and is useful for accessing the field via an interface.
func (v *Environment) GetName() string { return v.Name }

// GetCreated_at returns Environment.Created_at, and is useful for accessing the field via an interface.
func (v *Environment) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Environment.Updated_at, and is useful for accessing the field via an interface.
func (v *Environment) GetUpdated_at() time.Time { return v.Updated_at }

type EnvironmentType string

const (
	EnvironmentTypePersonal   EnvironmentType = "personal"
	EnvironmentTypeEmphemeral EnvironmentType = "emphemeral"
	EnvironmentTypeStatic     EnvironmentType = "static"
)

// GetApiKeysApiKeysPagedApiKeysOutput includes the requested fields of the GraphQL type PagedApiKeysOutput.
type GetApiKeysApiKeysPagedApiKeysOutput struct {
	Items       []*ApiKey `json:"items"`
	Page_size   int       `json:"page_size"`
	Page        int       `json:"page"`
	Total_items int       `json:"total_items"`
	Total_pages int       `json:"total_pages"`
}

// GetItems returns GetApiKeysApiKeysPagedApiKeysOutput.Items, and is useful for accessing the field via an interface.
func (v *GetApiKeysApiKeysPagedApiKeysOutput) GetItems() []*ApiKey { return v.Items }

// GetPage_size returns GetApiKeysApiKeysPagedApiKeysOutput.Page_size, and is useful for accessing the field via an interface.
func (v *GetApiKeysApiKeysPagedApiKeysOutput) GetPage_size() int { return v.Page_size }

// GetPage returns GetApiKeysApiKeysPagedApiKeysOutput.Page, and is useful for accessing the field via an interface.
func (v *GetApiKeysApiKeysPagedApiKeysOutput) GetPage() int { return v.Page }

// GetTotal_items returns GetApiKeysApiKeysPagedApiKeysOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetApiKeysApiKeysPagedApiKeysOutput) GetTotal_items() int { return v.Total_items }

// GetTotal_pages returns GetApiKeysApiKeysPagedApiKeysOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetApiKeysApiKeysPagedApiKeysOutput) GetTotal_pages() int { return v.Total_pages }

// GetApiKeysResponse is returned by GetApiKeys on success.
type GetApiKeysResponse struct {
	ApiKeys *GetApiKeysApiKeysPagedApiKeysOutput `json:"apiKeys"`
}

// GetApiKeys returns GetApiKeysResponse.ApiKeys, and is useful for accessing the field via an interface.
func (v *GetApiKeysResponse) GetApiKeys() *GetApiKeysApiKeysPagedApiKeysOutput { return v.ApiKeys }

// GetConfigResponse is returned by GetConfig on success.
type GetConfigResponse struct {
	Config *Config `json:"config"`
}

// GetConfig returns GetConfigResponse.Config, and is useful for accessing the field via an interface.
func (v *GetConfigResponse) GetConfig() *Config { return v.Config }

// GetConfigsConfigsPagedConfigsOutput includes the requested fields of the GraphQL type PagedConfigsOutput.
type GetConfigsConfigsPagedConfigsOutput struct {
	Items       []*ConfigItem `json:"items"`
	Page_size   int           `json:"page_size"`
	Page        int           `json:"page"`
	Total_items int           `json:"total_items"`
	Total_pages int           `json:"total_pages"`
}

// GetItems returns GetConfigsConfigsPagedConfigsOutput.Items, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetItems() []*ConfigItem { return v.Items }

// GetPage_size returns GetConfigsConfigsPagedConfigsOutput.Page_size, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetPage_size() int { return v.Page_size }

// GetPage returns GetConfigsConfigsPagedConfigsOutput.Page, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetPage() int { return v.Page }

// GetTotal_items returns GetConfigsConfigsPagedConfigsOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetTotal_items() int { return v.Total_items }

// GetTotal_pages returns GetConfigsConfigsPagedConfigsOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetConfigsConfigsPagedConfigsOutput) GetTotal_pages() int { return v.Total_pages }

// GetConfigsResponse is returned by GetConfigs on success.
type GetConfigsResponse struct {
	Configs *GetConfigsConfigsPagedConfigsOutput `json:"configs"`
}

// GetConfigs returns GetConfigsResponse.Configs, and is useful for accessing the field via an interface.
func (v *GetConfigsResponse) GetConfigs() *GetConfigsConfigsPagedConfigsOutput { return v.Configs }

// GetDeploymentResponse is returned by GetDeployment on success.
type GetDeploymentResponse struct {
	Deployment *Deployment `json:"deployment"`
}

// GetDeployment returns GetDeploymentResponse.Deployment, and is useful for accessing the field via an interface.
func (v *GetDeploymentResponse) GetDeployment() *Deployment { return v.Deployment }

// GetDeploymentRevisionResponse is returned by GetDeploymentRevision on success.
type GetDeploymentRevisionResponse struct {
	DeploymentRevision *DeploymentRevision `json:"deploymentRevision"`
}

// GetDeploymentRevision returns GetDeploymentRevisionResponse.DeploymentRevision, and is useful for accessing the field via an interface.
func (v *GetDeploymentRevisionResponse) GetDeploymentRevision() *DeploymentRevision {
	return v.DeploymentRevision
}

// GetEnvironmentsEnvironmentsPagedEnvironmentsOutput includes the requested fields of the GraphQL type PagedEnvironmentsOutput.
type GetEnvironmentsEnvironmentsPagedEnvironmentsOutput struct {
	Items       []*Environment `json:"items"`
	Page_size   int            `json:"page_size"`
	Page        int            `json:"page"`
	Total_items int            `json:"total_items"`
	Total_pages int            `json:"total_pages"`
}

// GetItems returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Items, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetItems() []*Environment {
	return v.Items
}

// GetPage_size returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Page_size, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetPage_size() int { return v.Page_size }

// GetPage returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Page, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetPage() int { return v.Page }

// GetTotal_items returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetTotal_items() int {
	return v.Total_items
}

// GetTotal_pages returns GetEnvironmentsEnvironmentsPagedEnvironmentsOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput) GetTotal_pages() int {
	return v.Total_pages
}

// GetEnvironmentsResponse is returned by GetEnvironments on success.
type GetEnvironmentsResponse struct {
	Environments *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput `json:"environments"`
}

// GetEnvironments returns GetEnvironmentsResponse.Environments, and is useful for accessing the field via an interface.
func (v *GetEnvironmentsResponse) GetEnvironments() *GetEnvironmentsEnvironmentsPagedEnvironmentsOutput {
	return v.Environments
}

// GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput includes the requested fields of the GraphQL type PagedOrganisationsOutput.
type GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput struct {
	Items       []*Organisation `json:"items"`
	Page        int             `json:"page"`
	Page_size   int             `json:"page_size"`
	Total_items int             `json:"total_items"`
	Total_pages int             `json:"total_pages"`
}

// GetItems returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Items, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetItems() []*Organisation {
	return v.Items
}

// GetPage returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Page, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetPage() int {
	return v.Page
}

// GetPage_size returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Page_size, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetPage_size() int {
	return v.Page_size
}

// GetTotal_items returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Total_items, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetTotal_items() int {
	return v.Total_items
}

// GetTotal_pages returns GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput.Total_pages, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput) GetTotal_pages() int {
	return v.Total_pages
}

// GetMemberOrganisationsResponse is returned by GetMemberOrganisations on success.
type GetMemberOrganisationsResponse struct {
	MemberOrganisations *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput `json:"memberOrganisations"`
}

// GetMemberOrganisations returns GetMemberOrganisationsResponse.MemberOrganisations, and is useful for accessing the field via an interface.
func (v *GetMemberOrganisationsResponse) GetMemberOrganisations() *GetMemberOrganisationsMemberOrganisationsPagedOrganisationsOutput {
	return v.MemberOrganisations
}

// IdWithToken includes the requested fields of the GraphQL type IdWithToken.
type IdWithToken struct {
	Id    uuid.UUID `json:"id"`
	Token string    `json:"token"`
}

// GetId returns IdWithToken.Id, and is useful for accessing the field via an interface.
func (v *IdWithToken) GetId() uuid.UUID { return v.Id }

// GetToken returns IdWithToken.Token, and is useful for accessing the field via an interface.
func (v *IdWithToken) GetToken() string { return v.Token }

// LoginContainerRepositoryResponse is returned by LoginContainerRepository on success.
type LoginContainerRepositoryResponse struct {
	LoginContainerRepository *AuthContainerRepository `json:"loginContainerRepository"`
}

// GetLoginContainerRepository returns LoginContainerRepositoryResponse.LoginContainerRepository, and is useful for accessing the field via an interface.
func (v *LoginContainerRepositoryResponse) GetLoginContainerRepository() *AuthContainerRepository {
	return v.LoginContainerRepository
}

// NewDeploymentResponse is returned by NewDeployment on success.
type NewDeploymentResponse struct {
	NewDeployment uuid.UUID `json:"newDeployment"`
}

// GetNewDeployment returns NewDeploymentResponse.NewDeployment, and is useful for accessing the field via an interface.
func (v *NewDeploymentResponse) GetNewDeployment() uuid.UUID { return v.NewDeployment }

// Organisation includes the requested fields of the GraphQL type Organisation.
type Organisation struct {
	Id         uuid.UUID         `json:"id"`
	Code       string            `json:"code"`
	Name       string            `json:"name"`
	State      OrganisationState `json:"state"`
	Created_at time.Time         `json:"created_at"`
	Updated_at time.Time         `json:"updated_at"`
	Deleted_at time.Time         `json:"deleted_at"`
}

// GetId returns Organisation.Id, and is useful for accessing the field via an interface.
func (v *Organisation) GetId() uuid.UUID { return v.Id }

// GetCode returns Organisation.Code, and is useful for accessing the field via an interface.
func (v *Organisation) GetCode() string { return v.Code }

// GetName returns Organisation.Name, and is useful for accessing the field via an interface.
func (v *Organisation) GetName() string { return v.Name }

// GetState returns Organisation.State, and is useful for accessing the field via an interface.
func (v *Organisation) GetState() OrganisationState { return v.State }

// GetCreated_at returns Organisation.Created_at, and is useful for accessing the field via an interface.
func (v *Organisation) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns Organisation.Updated_at, and is useful for accessing the field via an interface.
func (v *Organisation) GetUpdated_at() time.Time { return v.Updated_at }

// GetDeleted_at returns Organisation.Deleted_at, and is useful for accessing the field via an interface.
func (v *Organisation) GetDeleted_at() time.Time { return v.Deleted_at }

type OrganisationState string

const (
	OrganisationStateNew     OrganisationState = "new"
	OrganisationStateCreated OrganisationState = "created"
	OrganisationStateDeleted OrganisationState = "deleted"
)

// Registry includes the requested fields of the GraphQL type ContainerRegistry.
type Registry struct {
	Username     string `json:"username"`
	Registry_url string `json:"registry_url"`
}

// GetUsername returns Registry.Username, and is useful for accessing the field via an interface.
func (v *Registry) GetUsername() string { return v.Username }

// GetRegistry_url returns Registry.Registry_url, and is useful for accessing the field via an interface.
func (v *Registry) GetRegistry_url() string { return v.Registry_url }

type ResourceInput struct {
	Code      string                  `json:"code"`
	Type      ResourceType            `json:"type"`
	Data      map[string]interface{}  `json:"data"`
	Overrides *ResourceOverridesInput `json:"overrides,omitempty"`
}

// GetCode returns ResourceInput.Code, and is useful for accessing the field via an interface.
func (v *ResourceInput) GetCode() string { return v.Code }

// GetType returns ResourceInput.Type, and is useful for accessing the field via an interface.
func (v *ResourceInput) GetType() ResourceType { return v.Type }

// GetData returns ResourceInput.Data, and is useful for accessing the field via an interface.
func (v *ResourceInput) GetData() map[string]interface{} { return v.Data }

// GetOverrides returns ResourceInput.Overrides, and is useful for accessing the field via an interface.
func (v *ResourceInput) GetOverrides() *ResourceOverridesInput { return v.Overrides }

type ResourceOverridesEnvironmentInput struct {
	Environment string                 `json:"environment"`
	Data        map[string]interface{} `json:"data"`
}

// GetEnvironment returns ResourceOverridesEnvironmentInput.Environment, and is useful for accessing the field via an interface.
func (v *ResourceOverridesEnvironmentInput) GetEnvironment() string { return v.Environment }

// GetData returns ResourceOverridesEnvironmentInput.Data, and is useful for accessing the field via an interface.
func (v *ResourceOverridesEnvironmentInput) GetData() map[string]interface{} { return v.Data }

type ResourceOverridesInput struct {
	Environments []*ResourceOverridesEnvironmentInput `json:"environments,omitempty"`
}

// GetEnvironments returns ResourceOverridesInput.Environments, and is useful for accessing the field via an interface.
func (v *ResourceOverridesInput) GetEnvironments() []*ResourceOverridesEnvironmentInput {
	return v.Environments
}

type ResourceType string

const (
	ResourceTypeContainer    ResourceType = "container"
	ResourceTypeDatabase     ResourceType = "database"
	ResourceTypeCluster      ResourceType = "cluster"
	ResourceTypeBucket       ResourceType = "bucket"
	ResourceTypeQueue        ResourceType = "queue"
	ResourceTypeNotification ResourceType = "notification"
)

// Resources includes the requested fields of the GraphQL type Resource.
type Resources struct {
	Code string                 `json:"code"`
	Type ResourceType           `json:"type"`
	Data map[string]interface{} `json:"data"`
}

// GetCode returns Resources.Code, and is useful for accessing the field via an interface.
func (v *Resources) GetCode() string { return v.Code }

// GetType returns Resources.Type, and is useful for accessing the field via an interface.
func (v *Resources) GetType() ResourceType { return v.Type }

// GetData returns Resources.Data, and is useful for accessing the field via an interface.
func (v *Resources) GetData() map[string]interface{} { return v.Data }

// RevisionItem includes the requested fields of the GraphQL type ConfigRevision.
type RevisionItem struct {
	Id             uuid.UUID   `json:"id"`
	Version_number string      `json:"version_number"`
	State          ConfigState `json:"state"`
	Created_at     time.Time   `json:"created_at"`
	Updated_at     time.Time   `json:"updated_at"`
}

// GetId returns RevisionItem.Id, and is useful for accessing the field via an interface.
func (v *RevisionItem) GetId() uuid.UUID { return v.Id }

// GetVersion_number returns RevisionItem.Version_number, and is useful for accessing the field via an interface.
func (v *RevisionItem) GetVersion_number() string { return v.Version_number }

// GetState returns RevisionItem.State, and is useful for accessing the field via an interface.
func (v *RevisionItem) GetState() ConfigState { return v.State }

// GetCreated_at returns RevisionItem.Created_at, and is useful for accessing the field via an interface.
func (v *RevisionItem) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns RevisionItem.Updated_at, and is useful for accessing the field via an interface.
func (v *RevisionItem) GetUpdated_at() time.Time { return v.Updated_at }

// SecretItem includes the requested fields of the GraphQL type Secret.
type SecretItem struct {
	Id          uuid.UUID        `json:"id"`
	Code        string           `json:"code"`
	Environment *Environment     `json:"environment"`
	Stack       *SecretItemStack `json:"stack"`
	State       StackState       `json:"state"`
	Created_at  time.Time        `json:"created_at"`
	Updated_at  time.Time        `json:"updated_at"`
}

// GetId returns SecretItem.Id, and is useful for accessing the field via an interface.
func (v *SecretItem) GetId() uuid.UUID { return v.Id }

// GetCode returns SecretItem.Code, and is useful for accessing the field via an interface.
func (v *SecretItem) GetCode() string { return v.Code }

// GetEnvironment returns SecretItem.Environment, and is useful for accessing the field via an interface.
func (v *SecretItem) GetEnvironment() *Environment { return v.Environment }

// GetStack returns SecretItem.Stack, and is useful for accessing the field via an interface.
func (v *SecretItem) GetStack() *SecretItemStack { return v.Stack }

// GetState returns SecretItem.State, and is useful for accessing the field via an interface.
func (v *SecretItem) GetState() StackState { return v.State }

// GetCreated_at returns SecretItem.Created_at, and is useful for accessing the field via an interface.
func (v *SecretItem) GetCreated_at() time.Time { return v.Created_at }

// GetUpdated_at returns SecretItem.Updated_at, and is useful for accessing the field via an interface.
func (v *SecretItem) GetUpdated_at() time.Time { return v.Updated_at }

// SecretItemStack includes the requested fields of the GraphQL type Stack.
type SecretItemStack struct {
	Outputs []*SecretItemStackOutputsStackOutput `json:"outputs"`
}

// GetOutputs returns SecretItemStack.Outputs, and is useful for accessing the field via an interface.
func (v *SecretItemStack) GetOutputs() []*SecretItemStackOutputsStackOutput { return v.Outputs }

// SecretItemStackOutputsStackOutput includes the requested fields of the GraphQL type StackOutput.
type SecretItemStackOutputsStackOutput struct {
	Output_key   string `json:"output_key"`
	Output_value string `json:"output_value"`
}

// GetOutput_key returns SecretItemStackOutputsStackOutput.Output_key, and is useful for accessing the field via an interface.
func (v *SecretItemStackOutputsStackOutput) GetOutput_key() string { return v.Output_key }

// GetOutput_value returns SecretItemStackOutputsStackOutput.Output_value, and is useful for accessing the field via an interface.
func (v *SecretItemStackOutputsStackOutput) GetOutput_value() string { return v.Output_value }

type StackState string

const (
	StackStateNew        StackState = "new"
	StackStateCreating   StackState = "creating"
	StackStateCreated    StackState = "created"
	StackStateUpdating   StackState = "updating"
	StackStateUpdated    StackState = "updated"
	StackStateFailed     StackState = "failed"
	StackStateDeleting   StackState = "deleting"
	StackStateDeleted    StackState = "deleted"
	StackStateCancelling StackState = "cancelling"
)

// UpdateApiKeyResponse is returned by UpdateApiKey on success.
type UpdateApiKeyResponse struct {
	UpdateApiKey *IdWithToken `json:"updateApiKey"`
}

// GetUpdateApiKey returns UpdateApiKeyResponse.UpdateApiKey, and is useful for accessing the field via an interface.
func (v *UpdateApiKeyResponse) GetUpdateApiKey() *IdWithToken { return v.UpdateApiKey }

type UpdateConfigInput struct {
	Organisation_id uuid.UUID          `json:"organisation_id"`
	Aggregate_id    uuid.UUID          `json:"aggregate_id"`
	Name            string             `json:"name"`
	Resources       []*ResourceInput   `json:"resources,omitempty"`
	Access          *ConfigAccessInput `json:"access,omitempty"`
	Version_number  string             `json:"version_number"`
	Revision_id     uuid.UUID          `json:"revision_id"`
}

// GetOrganisation_id returns UpdateConfigInput.Organisation_id, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetOrganisation_id() uuid.UUID { return v.Organisation_id }

// GetAggregate_id returns UpdateConfigInput.Aggregate_id, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetAggregate_id() uuid.UUID { return v.Aggregate_id }

// GetName returns UpdateConfigInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetName() string { return v.Name }

// GetResources returns UpdateConfigInput.Resources, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetResources() []*ResourceInput { return v.Resources }

// GetAccess returns UpdateConfigInput.Access, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetAccess() *ConfigAccessInput { return v.Access }

// GetVersion_number returns UpdateConfigInput.Version_number, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetVersion_number() string { return v.Version_number }

// GetRevision_id returns UpdateConfigInput.Revision_id, and is useful for accessing the field via an interface.
func (v *UpdateConfigInput) GetRevision_id() uuid.UUID { return v.Revision_id }

// UpdateConfigResponse is returned by UpdateConfig on success.
type UpdateConfigResponse struct {
	UpdateConfig uuid.UUID `json:"updateConfig"`
}

// GetUpdateConfig returns UpdateConfigResponse.UpdateConfig, and is useful for accessing the field via an interface.
func (v *UpdateConfigResponse) GetUpdateConfig() uuid.UUID { return v.UpdateConfig }

// __CreateApiKeyInput is used internally by genqlient
type __CreateApiKeyInput struct {
	AggregateId    uuid.UUID `json:"aggregateId"`
	OrganisationId uuid.UUID `json:"organisationId"`
}

// GetAggregateId returns __CreateApiKeyInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__CreateApiKeyInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetOrganisationId returns __CreateApiKeyInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateApiKeyInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// __CreateConfigInput is used internally by genqlient
type __CreateConfigInput struct {
	OrganisationId uuid.UUID   `json:"organisationId"`
	AggregateId    uuid.UUID   `json:"aggregateId"`
	Code           string      `json:"code"`
	Class          ConfigClass `json:"class"`
	Name           string      `json:"name"`
}

// GetOrganisationId returns __CreateConfigInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateConfigInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __CreateConfigInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__CreateConfigInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetCode returns __CreateConfigInput.Code, and is useful for accessing the field via an interface.
func (v *__CreateConfigInput) GetCode() string { return v.Code }

// GetClass returns __CreateConfigInput.Class, and is useful for accessing the field via an interface.
func (v *__CreateConfigInput) GetClass() ConfigClass { return v.Class }

// GetName returns __CreateConfigInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateConfigInput) GetName() string { return v.Name }

// __CreateContainerRepositoryInput is used internally by genqlient
type __CreateContainerRepositoryInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	AggregateId    uuid.UUID `json:"aggregateId"`
	ConfigId       uuid.UUID `json:"configId"`
	Code           string    `json:"code"`
}

// GetOrganisationId returns __CreateContainerRepositoryInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateContainerRepositoryInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __CreateContainerRepositoryInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__CreateContainerRepositoryInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetConfigId returns __CreateContainerRepositoryInput.ConfigId, and is useful for accessing the field via an interface.
func (v *__CreateContainerRepositoryInput) GetConfigId() uuid.UUID { return v.ConfigId }

// GetCode returns __CreateContainerRepositoryInput.Code, and is useful for accessing the field via an interface.
func (v *__CreateContainerRepositoryInput) GetCode() string { return v.Code }

// __CreateSecretInput is used internally by genqlient
type __CreateSecretInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	AggregateId    uuid.UUID `json:"aggregateId"`
	ConfigId       uuid.UUID `json:"configId"`
	EnvironmentId  uuid.UUID `json:"environmentId"`
	Code           string    `json:"code"`
	Value          string    `json:"value"`
}

// GetOrganisationId returns __CreateSecretInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__CreateSecretInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __CreateSecretInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__CreateSecretInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetConfigId returns __CreateSecretInput.ConfigId, and is useful for accessing the field via an interface.
func (v *__CreateSecretInput) GetConfigId() uuid.UUID { return v.ConfigId }

// GetEnvironmentId returns __CreateSecretInput.EnvironmentId, and is useful for accessing the field via an interface.
func (v *__CreateSecretInput) GetEnvironmentId() uuid.UUID { return v.EnvironmentId }

// GetCode returns __CreateSecretInput.Code, and is useful for accessing the field via an interface.
func (v *__CreateSecretInput) GetCode() string { return v.Code }

// GetValue returns __CreateSecretInput.Value, and is useful for accessing the field via an interface.
func (v *__CreateSecretInput) GetValue() string { return v.Value }

// __DeleteApiKeyInput is used internally by genqlient
type __DeleteApiKeyInput struct {
	AggregateId uuid.UUID `json:"aggregateId"`
}

// GetAggregateId returns __DeleteApiKeyInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__DeleteApiKeyInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// __DeleteContainerRepositoryInput is used internally by genqlient
type __DeleteContainerRepositoryInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Id             uuid.UUID `json:"id"`
}

// GetOrganisationId returns __DeleteContainerRepositoryInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__DeleteContainerRepositoryInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetId returns __DeleteContainerRepositoryInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteContainerRepositoryInput) GetId() uuid.UUID { return v.Id }

// __DeleteDeploymentInput is used internally by genqlient
type __DeleteDeploymentInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Id             uuid.UUID `json:"id"`
}

// GetOrganisationId returns __DeleteDeploymentInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__DeleteDeploymentInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetId returns __DeleteDeploymentInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDeploymentInput) GetId() uuid.UUID { return v.Id }

// __DeleteSecretInput is used internally by genqlient
type __DeleteSecretInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Id             uuid.UUID `json:"id"`
}

// GetOrganisationId returns __DeleteSecretInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__DeleteSecretInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetId returns __DeleteSecretInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteSecretInput) GetId() uuid.UUID { return v.Id }

// __GetApiKeysInput is used internally by genqlient
type __GetApiKeysInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Page           int       `json:"page"`
	PageSize       int       `json:"pageSize"`
}

// GetOrganisationId returns __GetApiKeysInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetApiKeysInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetPage returns __GetApiKeysInput.Page, and is useful for accessing the field via an interface.
func (v *__GetApiKeysInput) GetPage() int { return v.Page }

// GetPageSize returns __GetApiKeysInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetApiKeysInput) GetPageSize() int { return v.PageSize }

// __GetConfigInput is used internally by genqlient
type __GetConfigInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	Code           string    `json:"code"`
}

// GetOrganisationId returns __GetConfigInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetConfigInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetCode returns __GetConfigInput.Code, and is useful for accessing the field via an interface.
func (v *__GetConfigInput) GetCode() string { return v.Code }

// __GetConfigsInput is used internally by genqlient
type __GetConfigsInput struct {
	OrganisationId uuid.UUID     `json:"organisationId"`
	Classes        []ConfigClass `json:"classes"`
	Page           int           `json:"page"`
	PageSize       int           `json:"pageSize"`
}

// GetOrganisationId returns __GetConfigsInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetClasses returns __GetConfigsInput.Classes, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetClasses() []ConfigClass { return v.Classes }

// GetPage returns __GetConfigsInput.Page, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetPage() int { return v.Page }

// GetPageSize returns __GetConfigsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetConfigsInput) GetPageSize() int { return v.PageSize }

// __GetDeploymentInput is used internally by genqlient
type __GetDeploymentInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	AggregateId    uuid.UUID `json:"aggregateId"`
}

// GetOrganisationId returns __GetDeploymentInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetDeploymentInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __GetDeploymentInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__GetDeploymentInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// __GetDeploymentRevisionInput is used internally by genqlient
type __GetDeploymentRevisionInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
	AggregateId    uuid.UUID `json:"aggregateId"`
}

// GetOrganisationId returns __GetDeploymentRevisionInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetDeploymentRevisionInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __GetDeploymentRevisionInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__GetDeploymentRevisionInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// __GetEnvironmentsInput is used internally by genqlient
type __GetEnvironmentsInput struct {
	OrganisationId uuid.UUID    `json:"organisationId"`
	Codes          []string     `json:"codes"`
	States         []StackState `json:"states"`
	Page           int          `json:"page"`
	PageSize       int          `json:"pageSize"`
}

// GetOrganisationId returns __GetEnvironmentsInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetCodes returns __GetEnvironmentsInput.Codes, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetCodes() []string { return v.Codes }

// GetStates returns __GetEnvironmentsInput.States, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetStates() []StackState { return v.States }

// GetPage returns __GetEnvironmentsInput.Page, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetPage() int { return v.Page }

// GetPageSize returns __GetEnvironmentsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetEnvironmentsInput) GetPageSize() int { return v.PageSize }

// __GetMemberOrganisationsInput is used internally by genqlient
type __GetMemberOrganisationsInput struct {
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
}

// GetPage returns __GetMemberOrganisationsInput.Page, and is useful for accessing the field via an interface.
func (v *__GetMemberOrganisationsInput) GetPage() int { return v.Page }

// GetPageSize returns __GetMemberOrganisationsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__GetMemberOrganisationsInput) GetPageSize() int { return v.PageSize }

// __LoginContainerRepositoryInput is used internally by genqlient
type __LoginContainerRepositoryInput struct {
	OrganisationId uuid.UUID `json:"organisationId"`
}

// GetOrganisationId returns __LoginContainerRepositoryInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__LoginContainerRepositoryInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// __NewDeploymentInput is used internally by genqlient
type __NewDeploymentInput struct {
	OrganisationId   uuid.UUID `json:"organisationId"`
	AggregateId      uuid.UUID `json:"aggregateId"`
	EnvironmentId    uuid.UUID `json:"environmentId"`
	ConfigId         uuid.UUID `json:"configId"`
	ConfigRevisionId uuid.UUID `json:"configRevisionId"`
	RevisionId       uuid.UUID `json:"revisionId"`
}

// GetOrganisationId returns __NewDeploymentInput.OrganisationId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetOrganisationId() uuid.UUID { return v.OrganisationId }

// GetAggregateId returns __NewDeploymentInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// GetEnvironmentId returns __NewDeploymentInput.EnvironmentId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetEnvironmentId() uuid.UUID { return v.EnvironmentId }

// GetConfigId returns __NewDeploymentInput.ConfigId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetConfigId() uuid.UUID { return v.ConfigId }

// GetConfigRevisionId returns __NewDeploymentInput.ConfigRevisionId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetConfigRevisionId() uuid.UUID { return v.ConfigRevisionId }

// GetRevisionId returns __NewDeploymentInput.RevisionId, and is useful for accessing the field via an interface.
func (v *__NewDeploymentInput) GetRevisionId() uuid.UUID { return v.RevisionId }

// __UpdateApiKeyInput is used internally by genqlient
type __UpdateApiKeyInput struct {
	AggregateId uuid.UUID `json:"aggregateId"`
}

// GetAggregateId returns __UpdateApiKeyInput.AggregateId, and is useful for accessing the field via an interface.
func (v *__UpdateApiKeyInput) GetAggregateId() uuid.UUID { return v.AggregateId }

// __UpdateConfigInput is used internally by genqlient
type __UpdateConfigInput struct {
	Input *UpdateConfigInput `json:"input,omitempty"`
}

// GetInput returns __UpdateConfigInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateConfigInput) GetInput() *UpdateConfigInput { return v.Input }

// The query or mutation executed by CreateApiKey.
const CreateApiKey_Operation = `
mutation CreateApiKey ($aggregateId: UUID!, $organisationId: UUID!) {
	createApiKey(input: {aggregate_id:$aggregateId,organisation_id:$organisationId}) {
		id
		token
	}
}
`

func CreateApiKey(
	ctx_ context.Context,
	client_ graphql.Client,
	aggregateId uuid.UUID,
	organisationId uuid.UUID,
) (*CreateApiKeyResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateApiKey",
		Query:  CreateApiKey_Operation,
		Variables: &__CreateApiKeyInput{
			AggregateId:    aggregateId,
			OrganisationId: organisationId,
		},
	}
	var err_ error

	var data_ CreateApiKeyResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateConfig.
const CreateConfig_Operation = `
mutation CreateConfig ($organisationId: UUID!, $aggregateId: UUID!, $code: String!, $class: ConfigClass!, $name: String!) {
	createConfig(input: {organisation_id:$organisationId,aggregate_id:$aggregateId,code:$code,class:$class,name:$name})
}
`

func CreateConfig(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
	code string,
	class ConfigClass,
	name string,
) (*CreateConfigResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateConfig",
		Query:  CreateConfig_Operation,
		Variables: &__CreateConfigInput{
			OrganisationId: organisationId,
			AggregateId:    aggregateId,
			Code:           code,
			Class:          class,
			Name:           name,
		},
	}
	var err_ error

	var data_ CreateConfigResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateContainerRepository.
const CreateContainerRepository_Operation = `
mutation CreateContainerRepository ($organisationId: UUID!, $aggregateId: UUID!, $configId: UUID!, $code: String!) {
	createContainerRepository(input: {organisation_id:$organisationId,aggregate_id:$aggregateId,config_id:$configId,code:$code})
}
`

func CreateContainerRepository(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
	configId uuid.UUID,
	code string,
) (*CreateContainerRepositoryResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateContainerRepository",
		Query:  CreateContainerRepository_Operation,
		Variables: &__CreateContainerRepositoryInput{
			OrganisationId: organisationId,
			AggregateId:    aggregateId,
			ConfigId:       configId,
			Code:           code,
		},
	}
	var err_ error

	var data_ CreateContainerRepositoryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateSecret.
const CreateSecret_Operation = `
mutation CreateSecret ($organisationId: UUID!, $aggregateId: UUID!, $configId: UUID!, $environmentId: UUID!, $code: String!, $value: String!) {
	createSecret(input: {organisation_id:$organisationId,aggregate_id:$aggregateId,config_id:$configId,environment_id:$environmentId,code:$code,secret_string:$value})
}
`

func CreateSecret(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
	configId uuid.UUID,
	environmentId uuid.UUID,
	code string,
	value string,
) (*CreateSecretResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateSecret",
		Query:  CreateSecret_Operation,
		Variables: &__CreateSecretInput{
			OrganisationId: organisationId,
			AggregateId:    aggregateId,
			ConfigId:       configId,
			EnvironmentId:  environmentId,
			Code:           code,
			Value:          value,
		},
	}
	var err_ error

	var data_ CreateSecretResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeleteApiKey.
const DeleteApiKey_Operation = `
mutation DeleteApiKey ($aggregateId: UUID!) {
	deleteApiKey(input: {id:$aggregateId})
}
`

func DeleteApiKey(
	ctx_ context.Context,
	client_ graphql.Client,
	aggregateId uuid.UUID,
) (*DeleteApiKeyResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeleteApiKey",
		Query:  DeleteApiKey_Operation,
		Variables: &__DeleteApiKeyInput{
			AggregateId: aggregateId,
		},
	}
	var err_ error

	var data_ DeleteApiKeyResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeleteContainerRepository.
const DeleteContainerRepository_Operation = `
mutation DeleteContainerRepository ($organisationId: UUID!, $id: UUID!) {
	deleteContainerRepository(input: {organisation_id:$organisationId,id:$id})
}
`

func DeleteContainerRepository(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	id uuid.UUID,
) (*DeleteContainerRepositoryResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeleteContainerRepository",
		Query:  DeleteContainerRepository_Operation,
		Variables: &__DeleteContainerRepositoryInput{
			OrganisationId: organisationId,
			Id:             id,
		},
	}
	var err_ error

	var data_ DeleteContainerRepositoryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeleteDeployment.
const DeleteDeployment_Operation = `
mutation DeleteDeployment ($organisationId: UUID!, $id: UUID!) {
	deleteDeployment(input: {organisation_id:$organisationId,id:$id})
}
`

func DeleteDeployment(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	id uuid.UUID,
) (*DeleteDeploymentResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeleteDeployment",
		Query:  DeleteDeployment_Operation,
		Variables: &__DeleteDeploymentInput{
			OrganisationId: organisationId,
			Id:             id,
		},
	}
	var err_ error

	var data_ DeleteDeploymentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeleteSecret.
const DeleteSecret_Operation = `
mutation DeleteSecret ($organisationId: UUID!, $id: UUID!) {
	deleteSecret(input: {organisation_id:$organisationId,id:$id})
}
`

func DeleteSecret(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	id uuid.UUID,
) (*DeleteSecretResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeleteSecret",
		Query:  DeleteSecret_Operation,
		Variables: &__DeleteSecretInput{
			OrganisationId: organisationId,
			Id:             id,
		},
	}
	var err_ error

	var data_ DeleteSecretResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetApiKeys.
const GetApiKeys_Operation = `
query GetApiKeys ($organisationId: UUID!, $page: Int, $pageSize: Int) {
	apiKeys(input: {organisation_id:$organisationId,page:$page,page_size:$pageSize}) {
		items {
			id
			state
			organisation_id
			created_at
			updated_at
			deleted_at
			authed_at
		}
		page_size
		page
		total_items
		total_pages
	}
}
`

func GetApiKeys(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	page int,
	pageSize int,
) (*GetApiKeysResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetApiKeys",
		Query:  GetApiKeys_Operation,
		Variables: &__GetApiKeysInput{
			OrganisationId: organisationId,
			Page:           page,
			PageSize:       pageSize,
		},
	}
	var err_ error

	var data_ GetApiKeysResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetConfig.
const GetConfig_Operation = `
query GetConfig ($organisationId: UUID!, $code: String!) {
	config(input: {organisation_id:$organisationId,code:$code}) {
		id
		code
		class
		name
		resources {
			code
			type
			data
		}
		access {
			inbound
			outbound
		}
		version_number
		state
		revisions {
			id
			version_number
			state
			created_at
			updated_at
		}
		containerRepositories {
			id
			code
			stack {
				outputs {
					output_key
					output_value
				}
			}
			state
			created_at
			updated_at
		}
		secrets {
			id
			code
			environment {
				id
				type
				state
				code
				name
				created_at
				updated_at
			}
			stack {
				outputs {
					output_key
					output_value
				}
			}
			state
			created_at
			updated_at
		}
		deployments {
			id
			state
			environment {
				id
				type
				state
				code
				name
				created_at
				updated_at
			}
			created_at
			updated_at
		}
		registry {
			username
			registry_url
		}
		created_at
		updated_at
	}
}
`

func GetConfig(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	code string,
) (*GetConfigResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetConfig",
		Query:  GetConfig_Operation,
		Variables: &__GetConfigInput{
			OrganisationId: organisationId,
			Code:           code,
		},
	}
	var err_ error

	var data_ GetConfigResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetConfigs.
const GetConfigs_Operation = `
query GetConfigs ($organisationId: UUID!, $classes: [ConfigClass!], $page: Int, $pageSize: Int) {
	configs(input: {organisation_id:$organisationId,classes:$classes,page:$page,page_size:$pageSize}) {
		items {
			id
			code
			class
			name
			state
			created_at
			updated_at
		}
		page_size
		page
		total_items
		total_pages
	}
}
`

func GetConfigs(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	classes []ConfigClass,
	page int,
	pageSize int,
) (*GetConfigsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetConfigs",
		Query:  GetConfigs_Operation,
		Variables: &__GetConfigsInput{
			OrganisationId: organisationId,
			Classes:        classes,
			Page:           page,
			PageSize:       pageSize,
		},
	}
	var err_ error

	var data_ GetConfigsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetDeployment.
const GetDeployment_Operation = `
query GetDeployment ($organisationId: UUID!, $aggregateId: UUID!) {
	deployment(input: {organisation_id:$organisationId,id:$aggregateId}) {
		id
		state
		environment {
			id
			type
			state
			code
			name
			created_at
			updated_at
		}
		created_at
		updated_at
	}
}
`

func GetDeployment(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
) (*GetDeploymentResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetDeployment",
		Query:  GetDeployment_Operation,
		Variables: &__GetDeploymentInput{
			OrganisationId: organisationId,
			AggregateId:    aggregateId,
		},
	}
	var err_ error

	var data_ GetDeploymentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetDeploymentRevision.
const GetDeploymentRevision_Operation = `
query GetDeploymentRevision ($organisationId: UUID!, $aggregateId: UUID!) {
	deploymentRevision(input: {organisation_id:$organisationId,id:$aggregateId}) {
		id
		state
		deployment {
			id
			state
			environment {
				id
				type
				state
				code
				name
				created_at
				updated_at
			}
			created_at
			updated_at
		}
		environment {
			id
			type
			state
			code
			name
			created_at
			updated_at
		}
		config {
			id
			code
			class
			name
			state
			created_at
			updated_at
		}
		created_at
		updated_at
	}
}
`

func GetDeploymentRevision(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
) (*GetDeploymentRevisionResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetDeploymentRevision",
		Query:  GetDeploymentRevision_Operation,
		Variables: &__GetDeploymentRevisionInput{
			OrganisationId: organisationId,
			AggregateId:    aggregateId,
		},
	}
	var err_ error

	var data_ GetDeploymentRevisionResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEnvironments.
const GetEnvironments_Operation = `
query GetEnvironments ($organisationId: UUID!, $codes: [String!], $states: [StackState!], $page: Int, $pageSize: Int) {
	environments(input: {organisation_id:$organisationId,codes:$codes,states:$states,page:$page,page_size:$pageSize}) {
		items {
			id
			type
			state
			code
			name
			created_at
			updated_at
		}
		page_size
		page
		total_items
		total_pages
	}
}
`

func GetEnvironments(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	codes []string,
	states []StackState,
	page int,
	pageSize int,
) (*GetEnvironmentsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEnvironments",
		Query:  GetEnvironments_Operation,
		Variables: &__GetEnvironmentsInput{
			OrganisationId: organisationId,
			Codes:          codes,
			States:         states,
			Page:           page,
			PageSize:       pageSize,
		},
	}
	var err_ error

	var data_ GetEnvironmentsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetMemberOrganisations.
const GetMemberOrganisations_Operation = `
query GetMemberOrganisations ($page: Int, $pageSize: Int) {
	memberOrganisations(input: {page:$page,page_size:$pageSize}) {
		items {
			id
			code
			name
			state
			created_at
			updated_at
			deleted_at
		}
		page
		page_size
		total_items
		total_pages
	}
}
`

func GetMemberOrganisations(
	ctx_ context.Context,
	client_ graphql.Client,
	page int,
	pageSize int,
) (*GetMemberOrganisationsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetMemberOrganisations",
		Query:  GetMemberOrganisations_Operation,
		Variables: &__GetMemberOrganisationsInput{
			Page:     page,
			PageSize: pageSize,
		},
	}
	var err_ error

	var data_ GetMemberOrganisationsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by LoginContainerRepository.
const LoginContainerRepository_Operation = `
mutation LoginContainerRepository ($organisationId: UUID!) {
	loginContainerRepository(input: {id:$organisationId}) {
		username
		password
		registry_url
	}
}
`

func LoginContainerRepository(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
) (*LoginContainerRepositoryResponse, error) {
	req_ := &graphql.Request{
		OpName: "LoginContainerRepository",
		Query:  LoginContainerRepository_Operation,
		Variables: &__LoginContainerRepositoryInput{
			OrganisationId: organisationId,
		},
	}
	var err_ error

	var data_ LoginContainerRepositoryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by NewDeployment.
const NewDeployment_Operation = `
mutation NewDeployment ($organisationId: UUID!, $aggregateId: UUID!, $environmentId: UUID!, $configId: UUID!, $configRevisionId: UUID!, $revisionId: UUID!) {
	newDeployment(input: {organisation_id:$organisationId,aggregate_id:$aggregateId,environment_id:$environmentId,config_id:$configId,config_revision_id:$configRevisionId,revision_id:$revisionId})
}
`

func NewDeployment(
	ctx_ context.Context,
	client_ graphql.Client,
	organisationId uuid.UUID,
	aggregateId uuid.UUID,
	environmentId uuid.UUID,
	configId uuid.UUID,
	configRevisionId uuid.UUID,
	revisionId uuid.UUID,
) (*NewDeploymentResponse, error) {
	req_ := &graphql.Request{
		OpName: "NewDeployment",
		Query:  NewDeployment_Operation,
		Variables: &__NewDeploymentInput{
			OrganisationId:   organisationId,
			AggregateId:      aggregateId,
			EnvironmentId:    environmentId,
			ConfigId:         configId,
			ConfigRevisionId: configRevisionId,
			RevisionId:       revisionId,
		},
	}
	var err_ error

	var data_ NewDeploymentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by UpdateApiKey.
const UpdateApiKey_Operation = `
mutation UpdateApiKey ($aggregateId: UUID!) {
	updateApiKey(input: {aggregate_id:$aggregateId}) {
		id
		token
	}
}
`

func UpdateApiKey(
	ctx_ context.Context,
	client_ graphql.Client,
	aggregateId uuid.UUID,
) (*UpdateApiKeyResponse, error) {
	req_ := &graphql.Request{
		OpName: "UpdateApiKey",
		Query:  UpdateApiKey_Operation,
		Variables: &__UpdateApiKeyInput{
			AggregateId: aggregateId,
		},
	}
	var err_ error

	var data_ UpdateApiKeyResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by UpdateConfig.
const UpdateConfig_Operation = `
mutation UpdateConfig ($input: UpdateConfigInput!) {
	updateConfig(input: $input)
}
`

func UpdateConfig(
	ctx_ context.Context,
	client_ graphql.Client,
	input *UpdateConfigInput,
) (*UpdateConfigResponse, error) {
	req_ := &graphql.Request{
		OpName: "UpdateConfig",
		Query:  UpdateConfig_Operation,
		Variables: &__UpdateConfigInput{
			Input: input,
		},
	}
	var err_ error

	var data_ UpdateConfigResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
