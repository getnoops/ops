query GetConfigs($organisationId: UUID!, $class: ConfigClass!, $page: Int, $pageSize: Int) {
  configs(input: {
    organisation_id: $organisationId,
    class: $class,
    page: $page,
    page_size: $pageSize
  }) {
    # @genqlient(typename: "Config")
    items {
      id
      code
      class
      name
      resources {
        code
        type
        data
        references
        allow_access
      }
      version_number
      state
      created_at
      updated_at
    }
    page_size
    page
    total_items
    total_pages
  }
}

query GetConfig($organisationId: UUID!, $code: String!) {
  # @genqlient(typename: "ConfigWithRevisions")
  config(input: {
    organisation_id: $organisationId,
    code: $code
  }) {
    id
    code
    class
    name
    resources {
      code
      type
      data
      references
      allow_access
    }
    version_number
    state
    revisions {
      id
      version_number
      state
      created_at
      updated_at
    }
    containerRegistries {
      id
      state
      code
      created_at
      updated_at
    }
    created_at
    updated_at
  }
}

query GetConfigRevision($organisationId: UUID!, $code: String!) {
  # @genqlient(typename: "ConfigWithEnvironments")
  config(input: {
    organisation_id: $organisationId,
    code: $code
  }) {
    id
    code
    class
    name
    resources {
      code
      type
      data
      references
      allow_access
    }
    version_number
    state
    created_at
    updated_at
  }
}

query GetEnvironments($organisationId: UUID!, $codes: [String!], $page: Int, $pageSize: Int) {
  environments(input: {
    organisation_id: $organisationId,
    codes: $codes,
    page: $page,
    page_size: $pageSize
  }) {
    # @genqlient(typename: "Environment")
    items {
      id
      type
      state
      code
      name
      created_at
      updated_at
    }
    page_size
    page
    total_items
    total_pages
  }
}

query GetMemberOrganisations($userId: UUID!, $page: Int, $pageSize: Int) {
  memberOrganisations(input: {
    user_id: $userId,
    page: $page,
    page_size: $pageSize
  }) {
    # @genqlient(typename: "Organisation")
    items {
      id
      code
      name
      state
      created_at
      updated_at
      deleted_at
    }
    limit
    page
    total_items
    total_pages
  }
}

mutation NewDeployment($organisationId: UUID!, $aggregateId: UUID!, $environmentId: UUID!, $configId: UUID!, $configRevisionId: UUID!, $revisionId: UUID!) {
  newDeployment(input: {
    organisation_id: $organisationId,
    aggregate_id: $aggregateId,
    environment_id: $environmentId,
    config_id: $configId,
    config_revision_id: $configRevisionId,
    revision_id: $revisionId,
  })
}

mutation CreateContainerRegistry($organisationId: UUID!, $aggregateId: UUID!, $configId: UUID!, $code: String!) {
  createContainerRegistry(input: {
    organisation_id: $organisationId,
    aggregate_id: $aggregateId,
    config_id: $configId,
    code: $code,
  })
}

mutation DeleteContainerRegistry($organisationId: UUID!, $id: UUID!) {
  deleteContainerRegistry(input: {
    organisation_id: $organisationId,
    id: $id,
  })
}